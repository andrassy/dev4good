@model Szmyd.Frooth.ViewModels.ResourcesViewModel
@using Orchard.ContentManagement;
@using Szmyd.Frooth;
@{ Layout.Title = T("Manage layer resources").ToString(); }
<div class="manage">
    <strong>@T("Choose layer: ")</strong>
    @foreach (var layer in Model.Layers)
    {
        if (layer.Id == Model.LayerId)
        { 
        <strong>
            @Html.ActionLink(T(layer.Name).Text, "Layer", new { Area = "Szmyd.Frooth", LayerId = layer.ContentItem.Id })
        </strong>
         
        }
        else
        {
        @Html.ActionLink(T(layer.Name).Text, "Layer", new { Area = "Szmyd.Frooth", LayerId = layer.ContentItem.Id })
        }
  
        <text>&nbsp;&nbsp;|&nbsp;&nbsp;</text>
    }
    @Html.ActionLink(T("Manage resources").ToString(), "Index", new { Area = "Szmyd.Frooth" }, new { @class = "button primaryAction" })
    @Html.ActionLink(T("+ Add a layer").ToString(), "AddLayer", "Admin", new { Area = "Orchard.Widgets" }, new { @class = "button primaryAction" }) 
</div>
<h2>@T("Styles applied to this layer")</h2>
<table class="items">
    <colgroup>
        <col id="Name" />
        <col id="File" />
    </colgroup>
    <thead>
        <tr>
            <td scope="col">@T("Name")
            </td>
            <td scope="col">@T("Stylesheet file")
            </td>
            <td scope="col">
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach(var style in Model.StylesInLayer)
        {
            <tr>
                <td>@style.Name
                </td>
                <td>
                    <a href="@(!string.IsNullOrWhiteSpace(style.Url) ? style.Url : Url.Content(style.LocalPath))">
                        @T("Download")</a>
                </td>
                <td>
                    <a href="@Html.AntiForgeryTokenGetUrl(Url.Action("LayerRemove", new { resourceId = style.Id, layerId = Model.LayerId }))" class="remove">@T("Remove from layer")</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<h2>@T("Styles available")</h2>
<table class="items">
    <colgroup>
        <col id="AddName" />
        <col id="AddFile" />
    </colgroup>
    <thead>
        <tr>
            <td scope="col">@T("Name")
            </td>
            <td scope="col">@T("Stylesheet file")
            </td>
            <td scope="col">
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach(var style in Model.AvailableStyles)
        {
            <tr>
                <td>@style.Name
                </td>
                <td>
                    <a href="@(!string.IsNullOrWhiteSpace(style.Url) ? style.Url : Url.Content(style.LocalPath))">
                        @T("Download")</a>
                </td>
                <td>
                    <a href="@Html.AntiForgeryTokenGetUrl(Url.Action("LayerAdd", new { resourceId = style.Id, layerId = Model.LayerId }))" class="remove">@T("Add to layer")</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<hr />
<h2>@T("Scripts applied to this layer")</h2>
<table class="items">
    <colgroup>
        <col id="ScriptName" />
        <col id="ScriptFile" />
        <col id="ScriptLocation" />
    </colgroup>
    <thead>
        <tr>
            <td scope="col">@T("Name")
            </td>
            <td scope="col">@T("Script file")
            </td>
            <td scope="col">@T("Script location")
            </td>
            <td scope="col">
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach(var script in Model.ScriptsInLayer)
        {
            <tr>
                <td>@script.Name
                </td>
                <td>
                    <a href="@(!string.IsNullOrWhiteSpace(script.Url) ? script.Url : Url.Content(script.LocalPath))">
                        @T("Download")</a>
                </td>
                <td>
                    @T(Enum.GetName(typeof(Szmyd.Frooth.Models.ResourceLocation), script.Location))
                </td>
                <td>
                    <a href="@Html.AntiForgeryTokenGetUrl(Url.Action("LayerRemove", new { resourceId = script.Id, layerId = Model.LayerId }))" class="remove">@T("Remove from layer")</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<h2>@T("Scripts available")</h2>
<table class="items">
    <colgroup>
        <col id="AddScriptName" />
        <col id="AddScriptFile" />
        <col id="AddScriptLocation" />
    </colgroup>
    <thead>
        <tr>
            <td scope="col">@T("Name")
            </td>
            <td scope="col">@T("Script file")
            </td>
            <td scope="col">@T("Script location")
            </td>
            <td scope="col">
            </td>
        </tr>
    </thead>
    <tbody>
        @foreach(var script in Model.AvailableScripts)
        {
            <tr>
                <td>@script.Name
                </td>
                <td>
                    <a href="@(!string.IsNullOrWhiteSpace(script.Url) ? script.Url : Url.Content(script.LocalPath))">
                        @T("Download")</a>
                </td>
                <td>
                    @T(Enum.GetName(typeof(Szmyd.Frooth.Models.ResourceLocation), script.Location))
                </td>
                <td>
                    <a href="@Html.AntiForgeryTokenGetUrl(Url.Action("LayerAdd", new { resourceId = script.Id, layerId = Model.LayerId }))" class="remove">@T("Add to layer")</a>
                </td>
            </tr>
        }
    </tbody>
</table>


