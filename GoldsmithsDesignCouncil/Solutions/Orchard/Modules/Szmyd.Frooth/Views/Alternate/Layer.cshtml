@model Szmyd.Frooth.ViewModels.AlternateManagementViewModel
@using Orchard.ContentManagement;
@using Szmyd.Frooth.Utilities;
@{ Layout.Title = T("Manage alternate layouts for layer '{0}'", Model.Layer.Name).Text; }
@functions{
    int RunningId { get; set; }
}
@helper DisplayZoneHierarchy(IEnumerable<Szmyd.Frooth.Models.ZoneAlternate> zones, int level)
    {
        if (zones != null)
        {
            int count = zones.Count() - 1;
            int j = 0;

            foreach (var zone in zones)
            { 
    <tr>
        <td>
            @for (int i = 0; i < level; i++)
            {
                <text>&gt;</text> 
            }
            &nbsp;
            @Html.DropDownListFor(m => m.Alternates[RunningId].ZoneName, new System.Web.Mvc.SelectList(Model.AvailableZones, "Name", "Name", zone.ZoneName))
        </td>
        <td>
            @Html.DropDownListFor(m => m.Alternates[RunningId].Parent.Id, new System.Web.Mvc.SelectList(Model.AvailableParents.Where(z => z.Id != zone.Id), "Id", "ZoneName", zone.Parent != null ? zone.Parent.Id : default(int)))
        </td>
        <td>
            @Html.DropDownListFor(m => m.Alternates[RunningId].IsVertical, new System.Web.Mvc.SelectList(new[] { new { Id = true, Name = T("Vertical") }, new { Id = false, Name = T("Horizontal") } }, "Id", "Name", zone.IsVertical))
        </td>
        <td>
            @Html.CheckBox(Html.NameOf(m => m.Alternates[RunningId].IsCollapsible), zone.IsCollapsible)
        </td>
        <td>
            @Html.CheckBox(Html.NameOf(m => m.Alternates[RunningId].IsRemoved), zone.IsRemoved)
        </td>
        <td>
            @Html.DropDownList(Html.NameOf(m => m.Alternates[RunningId].Tag), new System.Web.Mvc.SelectList(Html5.Tags.Select(t => new { Id = t, Name = t }), "Id", "Name", zone.Tag))
        </td>
        <td>
            <input type="hidden" name="@Html.NameOf(m => m.Alternates[RunningId].Id)" value="@zone.Id" />
            <a href="@Html.AntiForgeryTokenGetUrl(Url.Action("Delete", new { id = zone.Id }))" class="remove">@T("Remove")</a>
        </td>
        
    </tr>    
                
    RunningId++;
    
    @DisplayZoneHierarchy(zone.Children, level + 1)
    
    j++;
            }
        }
}
<div class="manage">
    <strong>@T("Choose layer: ")</strong>
    @foreach (var layer in Model.Layers)
    {
        if (layer.Id == Model.LayerId)
        { 
        <strong>
            @Html.ActionLink(T(layer.Name).Text, "Layer", new { Area = "Szmyd.Frooth", LayerId = layer.ContentItem.Id })
        </strong>
         
        }
        else
        {
            @Html.ActionLink(T(layer.Name).Text, "Layer", new { Area = "Szmyd.Frooth", LayerId = layer.ContentItem.Id })
        }
  
        <text>&nbsp;&nbsp;|&nbsp;&nbsp;</text>
    }
    @Html.ActionLink(T("+ Add a layer").ToString(), "AddLayer", "Admin", new { Area = "Orchard.Widgets" }, new { @class = "button primaryAction" })
</div>
@using (Html.BeginFormAntiForgeryPost())
{
    <table class="items">
        <colgroup>
            <col id="Zone" />
            <col id="Parent" />
            <col id="Layout" />
            <col id="Collapsible" />
            <col id="Hidden" />
            <col id="Tag" />
            <col id="Actions" />
        </colgroup>
        <thead>
            <tr>
                <td scope="col">@T("Zone altered")
                </td>
                <td scope="col">@T("Parent")
                </td>
                <td scope="col">@T("Layout")
                </td>
                <td scope="col">@T("Collapsible?")
                </td>
                <td scope="col">@T("Hidden?")
                </td>
                <td scope="col">@T("Wrapped as")
                </td>
                <td scope="col">
                </td>
            </tr>
        </thead>
        <tbody>
            @{ 
                RunningId = 0;
                @DisplayZoneHierarchy(Model.Alternates, 0)
            }
        </tbody>
    </table>
    <fieldset class="actions">
        <input type="hidden" name="layerId" value="@Model.LayerId" />
    </fieldset>
}
<h2>@T("Add New Zone Alteration")</h2>
@using (Html.BeginFormAntiForgeryPost(Url.Action("Create"), FormMethod.Post))
{
    <table class="menu items">
        <colgroup>
            <col id="AddZone" />
            <col id="AddParent" />
            <col id="AddLayout" />
            <col id="AddCollapsible" />
            <col id="AddHidden" />
            <col id="AddTag" />
            <col id="AddActions" />
        </colgroup>
        <tbody>
            <tr>
                <td>
                    <label for="ZoneName">@T("Zone to alter")</label>
                    @Html.DropDownListFor(m => m.New.ZoneName, new System.Web.Mvc.SelectList(Model.AvailableZones, "Name", "Name"))
                </td>
                <td>
                    <label for="Parent.Id">@T("Parent")</label>
                    @Html.DropDownList(Html.NameOf(m => m.New.Parent.Id), new System.Web.Mvc.SelectList(Model.AvailableParents, "Id", "ZoneName"))
                </td>
                <td>
                    <label for="IsVertical">@T("Layout")</label>
                    @Html.DropDownListFor(m => m.New.IsVertical, new System.Web.Mvc.SelectList(new[] { new { Id = true, Name = T("Vertical") }, new { Id = false, Name = T("Horizontal") } }, "Id", "Name"))
                </td>
                <td>
                    <label for="IsCollapsible">@T("Collapsible?")</label>
                    @Html.EditorFor(m => m.New.IsCollapsible)
                </td>
                <td>
                    <label for="IsRemoved">@T("Hidden?")</label>
                    @Html.EditorFor(m => m.New.IsRemoved)
                </td>
                <td>
                    <label for="Tag">@T("Wrapped as")</label>
                    @Html.DropDownList(Html.NameOf(m => m.New.Tag), new System.Web.Mvc.SelectList(Html5.Tags.Select(t => new { Id = t, Name = t }), "Id", "Name"))
                </td>
                <td>
                    @Html.Hidden(Html.NameOf(m => m.LayerId), Model.LayerId)
                    <input type="hidden" name="layerId" value="@Model.LayerId" />
                    <button class="add" type="submit">@T("Add")</button>
                </td>
            </tr>
        </tbody>
    </table>
}
<h2>@T("Final preview")</h2>
@{Html.RenderPartial("Preview", Model.PreviewZones);}
